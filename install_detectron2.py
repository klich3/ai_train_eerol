#!/usr/bin/env python3
"""
üõ†Ô∏è INSTALADOR DE DETECTRON2 para Dental AI
===========================================

Script para instalar detectron2 de forma segura seg√∫n el sistema.
"""

import subprocess
import sys
import platform
import torch

def check_torch_version():
    """Verifica la versi√≥n de PyTorch."""
    print(f"üîç PyTorch versi√≥n: {torch.__version__}")
    print(f"üîç CUDA disponible: {torch.cuda.is_available()}")
    if torch.cuda.is_available():
        print(f"üîç CUDA versi√≥n: {torch.version.cuda}")
    return torch.__version__, torch.cuda.is_available()

def install_detectron2():
    """Instala detectron2 seg√∫n el sistema."""
    torch_version, cuda_available = check_torch_version()
    
    print("\nüöÄ Instalando detectron2...")
    
    try:
        if cuda_available:
            # Instalar versi√≥n con CUDA
            cmd = [
                sys.executable, "-m", "pip", "install", 
                "detectron2", "-f", 
                "https://dl.fbaipublicfiles.com/detectron2/wheels/index.html"
            ]
        else:
            # Instalar versi√≥n CPU
            cmd = [
                sys.executable, "-m", "pip", "install",
                "git+https://github.com/facebookresearch/detectron2.git"
            ]
        
        print(f"üíª Ejecutando: {' '.join(cmd)}")
        subprocess.check_call(cmd)
        print("‚úÖ Detectron2 instalado exitosamente!")
        
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Error instalando detectron2: {e}")
        print("\nüìù Instalaci√≥n manual:")
        print("1. Para CUDA: pip install detectron2 -f https://dl.fbaipublicfiles.com/detectron2/wheels/index.html")
        print("2. Para CPU: pip install 'git+https://github.com/facebookresearch/detectron2.git'")
        return False
        
    return True

def test_detectron2():
    """Prueba que detectron2 funcione."""
    try:
        import detectron2
        from detectron2.utils.logger import setup_logger
        setup_logger()
        print(f"‚úÖ Detectron2 versi√≥n: {detectron2.__version__}")
        return True
    except ImportError as e:
        print(f"‚ùå Error importando detectron2: {e}")
        return False

def main():
    print("ü¶∑ INSTALADOR DE DETECTRON2 - Dental AI")
    print("=" * 50)
    
    # Verificar PyTorch
    check_torch_version()
    
    # Intentar importar detectron2
    try:
        import detectron2
        print(f"‚úÖ Detectron2 ya est√° instalado: {detectron2.__version__}")
        return
    except ImportError:
        print("‚ö†Ô∏è Detectron2 no est√° instalado")
    
    # Instalar detectron2
    if install_detectron2():
        # Probar instalaci√≥n
        test_detectron2()
    else:
        print("‚ùå Fall√≥ la instalaci√≥n autom√°tica")
        print("üí° Consulta la documentaci√≥n oficial: https://detectron2.readthedocs.io/")

if __name__ == "__main__":
    main()
